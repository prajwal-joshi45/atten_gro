# Azure Web App Deployment for Attendance System (atten_gro)
name: Build and deploy Attendance App to Azure Web App - atten-gro

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python version
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'  # Face recognition works better with 3.9
      
      - name: Install system dependencies for OpenCV and face recognition
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libopencv-dev \
            python3-opencv \
            libgl1-mesa-glx \
            libglib2.0-0 \
            libsm6 \
            libxext6 \
            libxrender-dev \
            libgomp1 \
            cmake \
            build-essential
      
      - name: Create and start virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          echo "$GITHUB_WORKSPACE/venv/bin" >> $GITHUB_PATH
      
      - name: Install Python dependencies
        run: |
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install wheel setuptools
          # Install requirements from both files
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f project_requirement.txt ]; then pip install -r project_requirement.txt; fi
          # Common face recognition dependencies
          pip install opencv-python-headless dlib face-recognition numpy pandas
        
      - name: Verify installation
        run: |
          source venv/bin/activate
          python -c "import cv2; print('OpenCV version:', cv2.__version__)"
          python -c "import face_recognition; print('Face recognition imported successfully')"
        continue-on-error: true
      
      - name: Create deployment package
        run: |
          # Remove unnecessary files for deployment
          rm -rf venv/
          rm -rf .git/
          rm -rf __pycache__/
          find . -name "*.pyc" -delete
          find . -name "__pycache__" -type d -exec rm -rf {} + 2>/dev/null || true
          
          # Create startup script for Azure
          cat > startup.py << 'EOF'
import os
import sys
from attendance import app

if __name__ == "__main__":
    port = int(os.environ.get('PORT', 8000))
    app.run(host='0.0.0.0', port=port, debug=False)
EOF
          
          # Create zip file for deployment
          zip -r release.zip . -x "*.git*" "*venv*" "*__pycache__*" "*.pyc"
      
      - name: Upload artifact for deployment jobs
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read
    
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: python-app
      
      - name: Unzip artifact for deployment
        run: unzip release.zip
      
      - name: Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID }}
      
      - name: 'Deploy to Azure Web App'
        uses: azure/webapps-deploy@v3
        id: deploy-to-webapp
        with:
          app-name: 'atten-gro'  # Replace with your actual Azure App Service name
          slot-name: 'Production'
