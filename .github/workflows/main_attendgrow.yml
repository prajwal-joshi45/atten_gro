name: Python Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.9'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libopencv-dev python3-opencv cmake build-essential

      - name: Set up virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          pip install --upgrade pip wheel setuptools

      - name: Install dependencies from requirements.txt
        run: |
          source venv/bin/activate
          pip install -r requirements.txt

      - name: Clean up and package
        run: |
          rm -rf venv/ .git/ __pycache__/
          find . -name "*.pyc" -delete
          zip -r release.zip .

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: python-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: python-app

      - name: Deploy to server
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_IP: ${{ secrets.SERVER_IP }}
          USERNAME: ${{ secrets.SERVER_USERNAME }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key.pem
          chmod 600 private_key.pem
          scp -o StrictHostKeyChecking=no -i private_key.pem release.zip $USERNAME@$SERVER_IP:/home/$USERNAME/
          ssh -o StrictHostKeyChecking=no -i private_key.pem $USERNAME@$SERVER_IP << 'EOF'
            unzip -o release.zip -d python-app
            cd python-app
            python3 -m venv venv
            source venv/bin/activate
            pip install -r requirements.txt
            nohup python3 main.py > output.log 2>&1 &
          EOF
